(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{472:function(t,e,a){"use strict";a.r(e);var n=a(4),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("有时候，我们在使用axios时会使用formdata进行传参，但是此时axios是已经对get，post方法进行过封装了，这个时候要怎么办呢？")]),t._v(" "),a("h2",{attrs:{id:"解决："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决："}},[t._v("#")]),t._v(" 解决：")]),t._v(" "),a("p",[t._v("在我们封装的http.js中加入一下一段代码：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded'\n\naxios.defaults.transformRequest = [function (data) {\n  let ret = ''\n  for (let it in data) {\n    ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n  }\n  return ret\n}]\n")])])]),a("p",[t._v("然后我们就可以通过formdata的形式进行传参了")])])}),[],!1,null,null,null);e.default=o.exports}}]);